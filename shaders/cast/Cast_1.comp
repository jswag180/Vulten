#version 450
#extension GL_ARB_separate_shader_objects : enable
//#extension GL_EXT_shader_explicit_arithmetic_types_int64 : enable
//#extension ARB_gpu_shader_int64 : enable

//layout(local_size_x = 1024, local_size_y = 1, local_size_z = 1) in;


//float | int uint       1
//float | int64 uint64   2
//int   | float uint     3
//int   | int64 uint64   4
//uint  | float int      5
//uint  | int64 uint64   6
//int64 | float int uint 7
//int64 | uint64         8
//uint64| float int uint 9
//uint64| int64          10

layout(set = 0, binding = 0) buffer a { readonly  mediump float inData[]; };
layout(set = 0, binding = 1) buffer b { writeonly  mediump float outData[]; };

//uses the TF_DataTypes enum values for type
//float  1
//int    3
//uint   22
//int64  9
//uint64 23
layout(constant_id = 0) const uint outType = 1;

void main(){
    if(outType == 3){// float to int
        outData[gl_GlobalInvocationID.x] = intBitsToFloat(int(inData[gl_GlobalInvocationID.x]));
    }
    if(outType == 22){// float to uint
        outData[gl_GlobalInvocationID.x] = uintBitsToFloat(uint(inData[gl_GlobalInvocationID.x]));
    }
}